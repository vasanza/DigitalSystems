/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2019  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLOCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("prueba_ADDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_ADDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDR";
}

SIGNAL("prueba_ADDRESS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_ADDRESS[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_ADDRESS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_ADDRESS";
}

SIGNAL("prueba_AddrSel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_Contador_Programa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_Contador_Programa[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Contador_Programa[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Contador_Programa";
}

SIGNAL("prueba_Data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_Data[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Data";
}

SIGNAL("prueba_Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_immidiate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_immidiate[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_immidiate";
}

SIGNAL("prueba_immidiate[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_immidiate";
}

SIGNAL("prueba_immidiate[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_immidiate";
}

SIGNAL("prueba_immidiate[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_immidiate";
}

SIGNAL("prueba_immidiate[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_immidiate";
}

SIGNAL("prueba_incPC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_INST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_INST[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_INST[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_INST";
}

SIGNAL("prueba_LoadEn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_LoadInstr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_OP1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_OP1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP1";
}

SIGNAL("prueba_OP1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP1";
}

SIGNAL("prueba_OP1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP1";
}

SIGNAL("prueba_OP1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP1";
}

SIGNAL("prueba_OP1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP1";
}

SIGNAL("prueba_OP2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_OP2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP2";
}

SIGNAL("prueba_OP2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP2";
}

SIGNAL("prueba_OP2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP2";
}

SIGNAL("prueba_OP2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP2";
}

SIGNAL("prueba_OP2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OP2";
}

SIGNAL("prueba_OPCODE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_OPCODE[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OPCODE";
}

SIGNAL("prueba_OPCODE[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OPCODE";
}

SIGNAL("prueba_OPCODE[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OPCODE";
}

SIGNAL("prueba_OPCODE[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OPCODE";
}

SIGNAL("prueba_OPCODE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OPCODE";
}

SIGNAL("prueba_OPCODE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_OPCODE";
}

SIGNAL("prueba_read_W_1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_read_W_2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_RegisterAsel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_RegisterAsel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterAsel";
}

SIGNAL("prueba_RegisterAsel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterAsel";
}

SIGNAL("prueba_RegisterAsel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterAsel";
}

SIGNAL("prueba_RegisterAsel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterAsel";
}

SIGNAL("prueba_RegisterAsel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterAsel";
}

SIGNAL("prueba_RegisterBsel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_RegisterBsel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterBsel";
}

SIGNAL("prueba_RegisterBsel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterBsel";
}

SIGNAL("prueba_RegisterBsel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterBsel";
}

SIGNAL("prueba_RegisterBsel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterBsel";
}

SIGNAL("prueba_RegisterBsel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterBsel";
}

SIGNAL("prueba_RegisterRessel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_RegisterRessel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterRessel";
}

SIGNAL("prueba_RegisterRessel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterRessel";
}

SIGNAL("prueba_RegisterRessel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterRessel";
}

SIGNAL("prueba_RegisterRessel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterRessel";
}

SIGNAL("prueba_RegisterRessel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_RegisterRessel";
}

SIGNAL("prueba_Result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("prueba_Result[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Result";
}

SIGNAL("prueba_Result[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Result";
}

SIGNAL("prueba_Result[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Result";
}

SIGNAL("prueba_Result[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Result";
}

SIGNAL("prueba_Result[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "prueba_Result";
}

SIGNAL("prueba_Zero")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.load")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.decode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.exli")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.exaddc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.exsub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.exjp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState.exjpz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.load")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.decode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.exli")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.exadd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.exsub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.exjp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("CONTROL_UNIT:controlador|sState_next.exjpz")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("CLOCK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 230.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 47.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 47.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 22.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDR[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 22.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 962.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 230.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 47.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 47.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 22.5;
		}
	}
}

TRANSITION_LIST("prueba_ADDRESS[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 22.5;
		}
	}
}

TRANSITION_LIST("prueba_AddrSel")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 2.5;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 262.5;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 47.5;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 142.5;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 47.5;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 82.5;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 27.5;
		}
	}
}

TRANSITION_LIST("prueba_Contador_Programa[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 52.5;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 27.5;
		}
	}
}

TRANSITION_LIST("prueba_Data[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 230.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 817.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 67.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 180.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 907.499;
		}
	}
}

TRANSITION_LIST("prueba_Data[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_Enable")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 2.5;
		}
	}
}

TRANSITION_LIST("prueba_immidiate[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_immidiate[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 67.499;
		}
	}
}

TRANSITION_LIST("prueba_immidiate[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 180.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_immidiate[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 907.499;
		}
	}
}

TRANSITION_LIST("prueba_immidiate[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_incPC")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("prueba_INST[31]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[30]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 230.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[29]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[28]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[27]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[26]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[25]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[24]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[23]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[22]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[21]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[20]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 817.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 67.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 180.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 907.499;
		}
	}
}

TRANSITION_LIST("prueba_INST[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_LoadEn")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 70.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 12.5;
		}
	}
}

TRANSITION_LIST("prueba_LoadInstr")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 37.5;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("prueba_OP1[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 542.5;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OP1[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 322.5;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 79.999;
			LEVEL 1 FOR 17.5;
		}
	}
}

TRANSITION_LIST("prueba_OP1[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 212.5;
			LEVEL 1 FOR 30.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 79.999;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 55.001;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OP1[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 212.501;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OP1[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 212.5;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OP2[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_OP2[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_OP2[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 152.501;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OP2[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 152.501;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 817.499;
		}
	}
}

TRANSITION_LIST("prueba_OP2[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 182.501;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_OPCODE[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_OPCODE[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 230.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_OPCODE[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OPCODE[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OPCODE[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 170.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_OPCODE[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_read_W_1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_read_W_2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("prueba_RegisterAsel[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterAsel[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterAsel[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterAsel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterAsel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterBsel[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterBsel[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterBsel[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 170.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterBsel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 817.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterBsel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterRessel[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterRessel[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 957.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterRessel[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterRessel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_RegisterRessel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 55.0;
			LEVEL 1 FOR 42.499;
		}
	}
}

TRANSITION_LIST("prueba_Result[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 42.501;
			LEVEL 0 FOR 389.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 55.001;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Result[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 42.501;
			LEVEL 0 FOR 169.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 55.001;
			LEVEL 0 FOR 24.999;
			LEVEL 1 FOR 127.5;
		}
	}
}

TRANSITION_LIST("prueba_Result[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 42.501;
			LEVEL 1 FOR 50.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 59.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 24.999;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 55.001;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 110.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 24.999;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 55.001;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 24.999;
			LEVEL 1 FOR 17.5;
		}
	}
}

TRANSITION_LIST("prueba_Result[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 42.501;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 85.0;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 85.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Result[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 42.501;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 29.999;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 0.001;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 17.499;
		}
	}
}

TRANSITION_LIST("prueba_Zero")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.501;
			LEVEL X FOR 40.0;
			LEVEL 0 FOR 639.999;
			LEVEL 1 FOR 0.001;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 29.999;
			LEVEL 0 FOR 207.5;
		}
	}
}

TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 970.0;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.load")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 37.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 2.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.decode")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 47.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 2.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.exli")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 57.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 842.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.exaddc")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.exsub")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 237.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 92.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.exjp")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 287.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 42.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState.exjpz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.load")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 32.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 7.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.decode")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 42.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 7.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.exli")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 52.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 847.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.exadd")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 172.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 17.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.exsub")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 232.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 97.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.exjp")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 282.5;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 100.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 47.5;
		}
	}
}

TRANSITION_LIST("CONTROL_UNIT:controlador|sState_next.exjpz")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_AddrSel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_incPC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_LoadEn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_LoadInstr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_read_W_1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_read_W_2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
	CHILDREN = 43, 44, 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 42;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_ADDRESS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
	CHILDREN = 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_INST[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 64;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 97;
	TREE_LEVEL = 0;
	CHILDREN = 98, 99, 100, 101, 102, 103;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OPCODE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 97;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_immidiate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 104;
	TREE_LEVEL = 0;
	CHILDREN = 105, 106, 107, 108, 109;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_immidiate[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_immidiate[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_immidiate[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_immidiate[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_immidiate[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 104;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterAsel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 110;
	TREE_LEVEL = 0;
	CHILDREN = 111, 112, 113, 114, 115;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterAsel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 110;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterAsel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 110;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterAsel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 110;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterAsel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 110;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterAsel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 110;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterBsel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 116;
	TREE_LEVEL = 0;
	CHILDREN = 117, 118, 119, 120, 121;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterBsel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterBsel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterBsel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterBsel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterBsel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 116;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterRessel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 122;
	TREE_LEVEL = 0;
	CHILDREN = 123, 124, 125, 126, 127;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterRessel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterRessel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterRessel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterRessel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_RegisterRessel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 122;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 128;
	TREE_LEVEL = 0;
	CHILDREN = 129, 130, 131, 132, 133;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 134;
	TREE_LEVEL = 0;
	CHILDREN = 135, 136, 137, 138, 139;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 135;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 136;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 137;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 138;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_OP2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 139;
	TREE_LEVEL = 1;
	PARENT = 134;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 140;
	TREE_LEVEL = 0;
	CHILDREN = 141, 142, 143, 144, 145;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Result[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 141;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Result[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 142;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Result[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 143;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Result[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 144;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Result[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 145;
	TREE_LEVEL = 1;
	PARENT = 140;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 146;
	TREE_LEVEL = 0;
	CHILDREN = 147, 148, 149, 150, 151, 152, 153, 154, 155, 156;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 147;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 148;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 149;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 150;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 151;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 152;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 153;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 154;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 155;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Contador_Programa[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 156;
	TREE_LEVEL = 1;
	PARENT = 146;
}

DISPLAY_LINE
{
	CHANNEL = "prueba_Zero";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 157;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 158;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 159;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.load";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 160;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.decode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 161;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.exli";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 162;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.exaddc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 163;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.exsub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 164;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.exjp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 165;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState.exjpz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 166;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 167;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 168;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.load";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 169;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.decode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 170;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.exli";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 171;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.exadd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 172;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.exsub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 173;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.exjp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 174;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONTROL_UNIT:controlador|sState_next.exjpz";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 175;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
